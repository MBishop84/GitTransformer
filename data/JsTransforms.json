[
  {
    "Id": 0,
    "AddedBy": "Mitch",
    "Name": "//Converter",
    "Code": "output = input.split('\\t')\n\t.map(x => `${x} = source.${x}`)\n\t.join(',\\n')"
  },
  {
    "Id": 1,
    "AddedBy": "Mitch",
    "Name": "//ADSSnippet",
    "Code": "output = input.split('\\n')\n\t.map(y => y.replace('     ', '\\\\t'))\n    .map(y => y.replace('    ', '\\\\t'))\n    .map(y => y.replace('   ', '\\\\t'))\n    .map(y => y.replace('  ', '\\\\t'))\n    .map(y => y.replace('\\t', '\\\\t'))\n    .map(x => `\"${x}\"`)\n    .join(',\\n')"
  },
  {
    "Id": 2,
    "AddedBy": "Mitch",
    "Name": "//InterfacesTransform",
    "Code": "output = input.split('\\n')\n    .map(y => \n    {\n        let x = y.split(':');\n        x[0] = x[0].includes('?') \n            ? x[0] \n            : `${x[0]}?`;\n        x[1] = x[1].includes('Mitch')\n            ? x[1] \n            : `${x[1].replace(';','')} | Mitch;`;\n        return x.join(':');\n    }).join('\\n')"
  },
  {
    "Id": 3,
    "AddedBy": "Mitch",
    "Name": "//Converter2",
    "Code": "output = input.split('\\t')\n    .map(y => y.replace('ID', 'Id'))\n    .map(z => \n      z.includes('Num') && \n      !z.includes('Number')\n        ? z.replace('Num', 'Number') : z)\n    .map(x => `${x} = source.${x}`)\n    .join(',\\n')"
  },
  {
    "Id": 4,
    "AddedBy": "Mitch",
    "Name": "//StarterCode",
    "Code": "output = input;"
  },
  {
    "Id": 5,
    "AddedBy": "Mitch",
    "Name": "//RowToJson",
    "Code": "output = '{\\n'\nvar cols = input.split('\\n')[0].split('\\t');\nvar data = input.split('\\n')[1].split('\\t');\nfor(let i = 0; i < data.length; i++){\n  if(['NULL', ''].includes(data[i])) continue;\n  if(Number(data[i]))\n    output += `\\t\"${cols[i]}\": ${data[i].toLowerCase()},\\n`;\n  else if (data[i] === '0')\n    output += `\\t\"${cols[i]}\": false,\\n`;\n  else if (data[i] === '1')\n    output += `\\t\"${cols[i]}\": true,\\n`;\n  else\n    output += `\\t\"${cols[i]}\": \"${data[i]}\",\\n`;\n}\noutput += '}'"
  },
  {
    "Id": 6,
    "AddedBy": "Mitch",
    "Name": "//JSONProperties",
    "Code": "for (let j in JSON.parse(input))\n  output += `[${j}], `"
  },
  {
    "Id": 7,
    "AddedBy": "Mitch",
    "Name": "//HashGuid",
    "Code": "String.prototype.hashCode = function() {\nvar hash = 0, i, chr, hashString = '';\n\tif (this.length === 0) return hash;\n\tfor (i = 0; i < this.length; i++) {\n\t\tchr = this.charCodeAt(i);\n\t\thash = (((hash << 5) - hash) + chr) * 16 | 0;\n\t\thashString += (Math.abs(hash |= 0)).toString(16);\n\t}\n\treturn hashString\n\t.substring(hashString.length >= 32 ? (hashString.length - 32) : 0)\n\t.replace(/(.{8})(.{4})(.{4})(.{4})(.{12})/,\"$1-$2-$3-$4-$5\");\n}\noutput = input.hashCode();"
  }
]